# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alFh'
alias la='ls -Ah'
alias l='ls -CFh'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# define colors
C_DEFAULT="\[\033[m\]"
C_WHITE="\[\033[1m\]"
C_BLACK="\[\033[30m\]"
C_RED="\[\033[31m\]"
C_GREEN="\[\033[32m\]"
C_YELLOW="\[\033[33m\]"
C_BLUE="\[\033[34m\]"
C_PURPLE="\[\033[35m\]"
C_CYAN="\[\033[36m\]"
C_CYAN2="\[\033[36;1m\]"
C_LIGHTGRAY="\[\033[37m\]"
C_DARKGRAY="\[\033[1;30m\]"
C_LIGHTRED="\[\033[1;31m\]"
C_LIGHTGREEN="\[\033[1;32m\]"
C_LIGHTYELLOW="\[\033[1;33m\]"
C_LIGHTBLUE="\[\033[1;34m\]"
C_LIGHTPURPLE="\[\033[1;35m\]"
C_LIGHTCYAN="\[\033[1;36m\]"
C_BG_BLACK="\[\033[40m\]"
C_BG_RED="\[\033[41m\]"
C_BG_GREEN="\[\033[42m\]"
C_BG_YELLOW="\[\033[43m\]"
C_BG_BLUE="\[\033[44m\]"
C_BG_PURPLE="\[\033[45m\]"
C_BG_CYAN="\[\033[46m\]"
C_BG_LIGHTGRAY="\[\033[47m\]"

PS1="$C_YELLOW\u(@aorus)$C_DEFAULT:$C_CYAN2\w$C_DEFAULT\$ "

#LANG=ko_KR.utf-8
#LANGUAGE=ko_KR
PATH=$PATH:${HOME}/.wine/drive_c/programfilesx86/ida6.8
ida=${HOME}/.wine/drive_c/programfilesx86/ida6.8

alias cpp='cd ${HOME}/gitrepo/lockdpwn/cpp_archive'
alias py='cd ${HOME}/gitrepo/lockdpwn/python_archive'

alias g1='cd ${HOME}/gitrepo/lockdpwn'
alias g2='cd ${HOME}/gitrepo/ims_ros'
alias g3='cd ${HOME}/cartographer_ws'
alias g4='cd ${HOME}/catkin_ws/src/edward/parking_slam'
alias gr='cd ${HOME}/gitrepo/'

alias ipy='cd ${HOME}/gitrepo/lockdpwn/python_archive/ipython'
alias ml='cd ${HOME}/gitrepo/lockdpwn/python_archive/machineLearning'
alias down='cd ~/Downloads'
alias docu='cd ~/Documents'
alias cl='clear'

# for jupyter notebook
alias notebook='jupyter notebook --no-browser'

# for git command
alias gg='git add . && git commit -m '"'updated'"' && git push '
alias add='git add'
alias commit='git commit'
alias push='git push'
alias pull='git pull'
alias pull_1='git pull origin server1_ws'
alias pull_2='git pull origin server2_ws'
alias clone='git clone'
alias add='git add -u'  # not for untracked file
alias cred='git config credential.helper "cache --timeout=864000000" --global'
alias gc='git checkout'
alias gb='git branch'
alias gs='git status'


# for tmux 
alias tm='tmux'
alias tmux='TERM=xterm-256color tmux -2 -u'
alias tls='tmux ls'                   # session list 확인
alias t='tmux switch -t '             # 원하는 session으로 이동
alias ta='tmux attach -t '            # 원하는 session으로 붙음 (tmux를 실행하고 있지 않은 경우)
alias td='tmux detach'                # 해당 session에서 detach 합니다
alias tk='tmux kill-session -t '      # 해당 session에서 kill 합니다
alias t4='tmux -u new-session -d    
tmux split-window -v
tmux split-window -h
tmux select-pane -U
tmux split-window -h
tmux select-pane -L
tmux attach-session -d'



msf=/opt/metasploit/apps/pro/vendor/bundle/ruby/2.3.0/gems/metasploit-framework-4.13.15


PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"${HOME}/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"; export PERL_MM_OPT;


# for counting files & get size
function len(){
	tree $1 | tail -1
	du -sh $1
}

# set ROS alias command
alias cw='cd ${HOME}/catkin_ws'
alias cs='cd ${HOME}/catkin_ws/src'
alias cm='cd ${HOME}/catkin_ws && catkin_make -DCMAKE_EXPORT_COMPILE_COMMANDS=1'

alias cwc='cd ${HOME}/cartographer_ws'
alias csc='cd ${HOME}/cartographer_ws/src'
alias cmc='cd ${HOME}/cartographer_ws && catkin_make_isolated --install --use-ninja -DCMAKE_EXPORT_COMPILE_COMMANDS=1'


alias cwg='cd ${HOME}/segmap_ws'
alias csg='cd ${HOME}/segmap_ws/src'
alias cmg='cd ${HOME}/segmap_ws && catkin build segmapper -DCMAKE_EXPORT_COMPILE_COMMANDS=1'

alias cse='cd ${HOME}/catkin_ws/src/edward/'
# for parking slam
alias cps='cd ${HOME}/catkin_ws/src/edward/parkingslam'

#alias cl='cd ${HOME}/gitrepo/ims'
#alias cr='cd ${HOME}/gitrepo/ims/ROS/'
alias so='source devel/setup.bash'
alias so2='rospack profile && source devel/setup.bash'

if [ -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh ]; then
    source /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh
fi


alias emacs='${HOME}/Downloads/emacs-25.2/lib-src/emacsclient -a '"''"' -c'

# for stockroom_bot
#alias sb='source ~/gitrepo/ims/ROS/stockroombot_ws/devel/setup.bash; export GAZEBO_MODEL_PATH=${HOME}/gitrepo/ims/ROS/stockroombot_ws/src/stockroom_bot'/models


# for source gazebo config
alias sog='source /usr/share/gazebo-2.2/setup.sh'
alias sog2='source /usr/share/gazebo/setup.sh'

# for source .bashrc
alias sob='source ${HOME}/.bashrc'

alias cdb='cd ~/gitrepo/ims/ROS/rosbook_ws'
alias cb='cd ${HOME}/bag_files'
alias cbb='cd /media/dyros-data/bag_files/'

alias cma='catkin_make -DCMAKE_EXPORT_COMPILE_COMMANDS=1'
alias cmb='cd ~/gitrepo/ims/ROS/rosbook_ws && catkin_make'



export VREP_ROOT_DIR=${HOME}/Documents/V-REP_PRO_EDU_V3_4_0_Linux/
export VREP_ROOT=${HOME}/Documents/V-REP_PRO_EDU_V3_4_0_Linux/
alias vrep='${HOME}/Documents/V-REP_PRO_EDU_V3_4_0_Linux/vrep.sh'
alias vrepd='${HOME}/Documents/V-REP_PRO_EDU_V3_4_0_Linux/vrep.sh ${HOME}/catkin_ws/src/controller_msk/controller_msk/vrep/mc_for_back_light.ttt'
alias vrepd2='${HOME}/Documents/V-REP_PRO_EDU_V3_4_0_Linux/vrep.sh ${HOME}/catkin_ws/src/controller_msk/controller_msk/vrep/mc_back_light.ttt'
alias vrepjw='${HOME}/Documents/V-REP_PRO_EDU_V3_4_0_Linux/vrep.sh ${HOME}/gitrepo/ims_ros/vrep_ws/JW/ParkingSimulator.ttt'

alias co='cd /opt/ros/kinetic/share/'

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# for bazel
export PATH="$PATH:$HOME/bin"

alias msfconsole='cd ~/Documents/metasploit-framework/ && ./msfconsole'


alias directorPython='${HOME}/Downloads/director/build/install/bin/directorPython'


# setting for Tensorflow GPU version 
# Using CUDA 8.0 & cuDNN 6.0
# export CUDA_HOME=/usr/local/cuda-8.0
# export PATH=/usr/local/cuda-8.0/bin${PATH:+:${PATH}}
# export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
# Using CUDA 9.0 & cuDNN 7.0
export CUDA_HOME=/usr/local/cuda-9.0
export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}


alias soc='source install_isolated/setup.bash'
alias gr='cd ${HOME}/gitrepo/'
alias dy='cd ${HOME}/gitrepo/dv_ws'
alias downd='cd /media/dyros-data/Download_d'


#UE4Editor-------------
alias ueditor='/media/dyros-data/gitrepo/UnrealEngine_4.18/Engine/Binaries/Linux/UE4Editor'
alias ueditor2='/media/dyros-data/gitrepo/UnrealEngine_4.19/Engine/Binaries/Linux/UE4Editor'
export UE4_ROOT='${HOME}/gitrepo/UnrealEngine'



alias ti='cd ${HOME}/Documents/TI-Nspire-CX-CAS\ emulator && wine TI-Nspire-CX-CAS.exe'
alias cdd='cd /media/dyros-data/'

alias cr='cd ${HOME}/gitrepo/ims_ros/'
alias t='tmux'


alias tmux='TERM=xterm-256color tmux -2 -u'
alias tmls='tmux ls'                   # session list 확인
alias tm='tmux switch -t '             # 원하는 session으로 이동
alias tma='tmux attach -t '            # 원하는 session으로 붙음 (tmux를 실행하고 있지 않은 경우)
alias tmd='tmux detach'                # 해당 session에서 detach 합니다
alias tmk='tmux kill-session -t '      # 해당 session에서 kill 합니다
alias tm4='tmux -u new-session -d    
tmux split-window -v
tmux split-window -h
tmux select-pane -U
tmux split-window -h
tmux select-pane -L
tmux attach-session -d'


# for rm to move file to trash bin
alias rm='trash-put'


# for reverse i search
stty -ixon


# for caffe
# export PYTHONPATH=${HOME}/gitrepo/fast-rcnn/caffe-fast-rcnn/python:$PYTHONPATH
# for Fast R-CNN
export FRCN_ROOT=${HOME}/gitrepo/fast-rcnn
# for simdat
# export PYTHONPATH=${HOME}/gitrepo:$PYTHONPATH

# for vtk 6.2
export LD_LIBRARY_PATH=/usr/include/vtk-6.2/:$LD_LIBRARY_PATH 
# for vtk 5.xx
export LD_LIBRARY_PATH=${HOME}/Documents/VTK-5.10.1/build:${HOME}/Documents/VTK-5.10.1/build/bin:$LD_LIBRARY_PATH 

# for cd command 
alias cd='cd '
alias ..='..'
alias ...='../..'
alias ....='../../..'
alias .....='../../../..'
alias cd..='cd ..'
alias cd...='cd ../..'
alias cd....='cd ../../..'


# for systemctl
alias sctl='sudo systemctl'

# for chown
alias chownd='sudo chown $USER:$USER * -R'

# for chmod
function chmodd() {
	find . -type f | xargs chmod 644 
	find . -type d | xargs chmod 775
}

# for ccc
# alias ccc='${HOME}/gitrepo/lockdpwn/script_archive/ctrl_caps_change.sh'

#export ROS_MASTER_URI=http://192.168.137.2:11311
#export ROS_HOSTNAME=127.0.0.1
# export ROS_MASTER_URI=http://192.168.4.102:11311
# export ROS_HOSTNAME=192.168.4.102
export ROS_MASTER_URI=http://127.0.0.1:11311
export ROS_HOSTNAME=127.0.0.1

# for RealVNC viewer
alias vncviewer='${HOME}/Documents/VNC-Viewer-6.17.1113-Linux-x64'

# for tmux command history
# export HISTCONTROL=ignoredups:erasedups
# shopt -s histappend
# export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# set ROS
source /opt/ros/kinetic/setup.bash
source ${HOME}/catkin_ws/devel/setup.bash
source ${HOME}/cartographer_ws/install_isolated/setup.bash  # for cartographer
source ~/catkin_ws/devel/setup.bash
# source ${HOME}/segmap_ws/devel/setup.bash  # for segmap

# for x11vnc && TeamViewer connected user
alias vu='netstat -tapno | grep 5902'
alias tu='netstat -tapno | grep Team'

# for carla
alias carla='cd /media/dyros-data/gitrepo/CARLA_0.8.4 && ./CarlaUE4.sh -windowed -resx=600 -resy=480 -carla-settings=./Example.CarlaSettings.ini'
alias carla_UE4='export UE4_ROOT=/media/dyros-data/gitrepo/UnrealEngine_4.18 && ueditor /media/dyros-data/gitrepo/carla-0.8.4_source/Unreal/CarlaUE4/CarlaUE4.uproject'

alias carla2='cd /media/dyros-data/gitrepo/CARLA_0.9.1 && ./CarlaUE4.sh -windowed -resx=600 -resy=480'
alias carla2_UE4='export UE4_ROOT=/media/dyros-data/gitrepo/UnrealEngine_4.19 && ueditor2 /media/dyros-data/gitrepo/carla-0.9.1_source/Unreal/CarlaUE4/CarlaUE4.uproject'

alias carla_exp='cd /media/dyros-data/gitrepo/CARLA_0.8.4/LinuxNoEditor && ./CarlaUE4.sh -windowed -resx=600 -resy=480 -carla-settings=./Example.CarlaSettings.ini'              
alias carla_ms='cd /media/dyros-data/gitrepo/carla-0.8.4_source/LinuxNoEditor && ./CarlaUE4.sh  -windowed -resx=800 -resy=640 -carla-settings=./Example.CarlaSettings.ini'       

#for nvidia-smi
alias nv='nvidia-smi -l'

#for AORUS LAN Card Insallation
alias aorus_lan='cd ~/Documents/r8152-2.09.0 && make && sudo make install'

#python virtualenv for segmap
alias seg='source ~/segmappyenv/bin/activate'

# for cmake rtags
alias cmakertags="cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 "

# for docker
alias doc='docker'
alias doca='docker attach'
alias docps='docker ps -a'
alias docrm='docker rm'
alias docrmi='docker rmi'
alias docim='docker images'

# docker PUSH to ONLINE commands----------------------------------------
# docker tag edward0im:ubuntu_cuda9.0 edward0im/dyrosvehicle:ubuntu_cuda9.0                                                          
# doc push edward0im/dyrosvehicle:ubuntu_cuda9.0
#----------------------------------------------------------------------- 

# for avod 
export PYTHONPATH=$PYTHONPATH:'/media/dyros-data/gitrepo/avod'
export PYTHONPATH=$PYTHONPATH:'/media/dyros-data/gitrepo/avod/wavedata'

# for vim ~/.bashrc
alias vb='vim ~/.bashrc'

# for libclang.7.so
export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH 
